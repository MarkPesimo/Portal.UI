@model APWModel.ViewModel.Portal.Leave_model.LeaveModel


@using (Html.BeginForm("Add", "Leave", FormMethod.Post, new { enctype = "multipart/form-data", name = "leave-Form", id = "leave-Form" }))
{

    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.EmpId)
    @Html.HiddenFor(m => m.DateFiled)
    @Html.HiddenFor(m => m.LeaveFromAMPM)
    @Html.HiddenFor(m => m.LeaveToAMPM)
    @Html.HiddenFor(m => m.Remarks)
    @Html.HiddenFor(m => m.Mode)
    @Html.HiddenFor(m => m.Message)

    @Html.HiddenFor(m => m.HasAttachement)
    @Html.HiddenFor(m => m.FileExtension)

    <style>
        .hidden {
            display: none !important;
        }
    </style>

    <div class="row" id="div-validation" style="display: none;">
        <div class="col mb-3">
            <label for="html" id="error-message-label" class="form-label text-danger"></label><br>
        </div>
    </div>

    <div class="row">
        <div class="col-6 mb-3">
            <label for="LeaveTypeId" class="form-label">Leave Type</label>
            @Html.DropDownListFor(m => m.LeaveTypeId, (IEnumerable<SelectListItem>)ViewBag._LeaveTypes, new { @class = "form-select", @placeholder = "Leave Types", @id = "LeaveTypeId" })
        </div>
        <div class="col-6 mb-3 d-flex align-items-center" id="checkboxWrapper">
            @Html.CheckBoxFor(m => m.EmergencyLeave, new { @class = "form-check-input me-1", id = "checkbox" })
            <label for="checkbox" class="form-check-label">Emergency Leave</label>
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            <label for="" class="form-label">From</label>
            @Html.TextBoxFor(m => m.LeaveFrom, new { @class = "form-control", @placeholder = "mm/dd/yyyy", @type = "date", @id = "LeaveFrom", @Value = Model.LeaveFrom.ToString("yyyy-MM-dd") })
        </div>

        <div class="col-6">
            <label for="" class="form-label">To</label>
            @Html.TextBoxFor(m => m.LeaveTo, new { @class = "form-control", @placeholder = "mm/dd/yyyy", @type = "date", @id = "LeaveTo", @Value = Model.LeaveTo.ToString("yyyy-MM-dd") })
        </div>
    </div>

    <div class="row mt-4" id="div-sameday-halfday">
        <div class="col-4">
            <div class="form-check form-switch mt-2">
                @Html.CheckBoxFor(m => m.IsHalfday, new { @class = "form-check-input", @name = @Model.IsHalfday, @value = @Model.IsHalfday })
                <label class="form-check-label" for="flexSwitchCheckChecked">Half day</label>
            </div>
        </div>

        <div class="col-8 d-none" id="div-sameday-halfday-details">
            <div class="row">
                <div class="col">
                    <div class="form-check form-switch mt-2">
                        @Html.CheckBoxFor(m => m.FirstHalf, new { @class = "form-check-input", @name = @Model.FirstHalf, @value = @Model.FirstHalf })
                        <label class="form-check-label" for="flexSwitchCheckChecked">First Half</label>
                    </div>
                </div>

                <div class="col">
                    <div class="form-check form-switch mt-2">
                        @Html.CheckBoxFor(m => m.SecondHalf, new { @class = "form-check-input", @name = @Model.SecondHalf, @value = @Model.SecondHalf })
                        <label class="form-check-label" for="flexSwitchCheckChecked">Second Half</label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4 d-none" id="div-not-sameday-halfday">
        <div class="col-6">
            <div class="form-check form-switch mt-2">
                @Html.CheckBoxFor(m => m.FirstDay_SecondHalf, new { @class = "form-check-input", @name = @Model.FirstDay_SecondHalf, @value = @Model.FirstDay_SecondHalf })
                <label class="form-check-label" for="flexSwitchCheckChecked">First day, Second half</label>
            </div>
        </div>

        <div class="col-6">
            <div class="form-check form-switch mt-2">
                @Html.CheckBoxFor(m => m.LastDay_FirstHalf, new { @class = "form-check-input", @name = @Model.LastDay_FirstHalf, @value = @Model.LastDay_FirstHalf })
                <label class="form-check-label" for="flexSwitchCheckChecked">Last day, First Half</label>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-3 mb-3">
            <label for="" class="form-label">No. of Days</label>
            @Html.TextBoxFor(m => m.LeaveDays, new { @class = "text-center form-control text-primary font-weight-bold", @placeholder = "No. of Days", @readonly = "true" })
        </div>
    </div>

    <div class="row mt-2">
        <div class="col">
            <label for="" class="form-label">Reason</label>
            @Html.TextAreaFor(m => m.Reason, 4, 40, new { @class = "form-control", @placeholder = "Enter your reason here" })
        </div>
    </div>

    <div class="row mt-2">
        <div class="col">
            <input class="form-control" type="file" name="Leave_Attachment" id="Leave_Attachment">
        </div>
    </div>
}



<script>
    $(document).ready(function () {
        function getWorkingDaysAgo(startDate, daysBack) {
            var date = new Date(startDate);
            var count = 0;
            while (count < daysBack) {
                date.setDate(date.getDate() - 1);
                var day = date.getDay();
                if (day !== 0 && day !== 6) count++;
            }
            return date;
        }

        function setDateRules() {
            var leaveType = $("#LeaveTypeId").val();
            var fromInput = $("#LeaveFrom");
            var toInput = $("#LeaveTo");
            var isEmergency = $("#checkbox").is(":checked");

            if (leaveType == "2") {
                $("#checkboxWrapper").removeClass("hidden");
            } else {
                $("#checkboxWrapper").addClass("hidden");
                $("#checkbox").prop("checked", false);
            }

            var today = new Date();
            var todayStr = today.toISOString().split('T')[0];

            if (leaveType == "2") {  //  Vacation Leave
                if (isEmergency) {
                    // Emergency: bypass 3 ays rule
                    fromInput.attr("min", todayStr).removeAttr("max");
                    toInput.attr("min", todayStr).removeAttr("max");
                } else {
                    // Normal VL: enforce 3 days rule
                    var minDate = new Date();
                    minDate.setDate(today.getDate() + 3);
                    var minStr = minDate.toISOString().split('T')[0];

                    fromInput.attr("min", minStr).removeAttr("max");
                    toInput.attr("min", todayStr).removeAttr("max");

                    if (fromInput.val() && fromInput.val() < minStr) fromInput.val(minStr);
                    if (toInput.val() && toInput.val() < todayStr) toInput.val(todayStr);
                }
            }
            else if (leaveType == "1") {  //  Sick Leave
                var minDate = getWorkingDaysAgo(today, 5);
                var minStr = minDate.toISOString().split('T')[0];

                fromInput.attr("min", minStr).removeAttr("max");
                toInput.attr("min", minStr).removeAttr("max");

                if (fromInput.val() && fromInput.val() < minStr) fromInput.val(minStr);
                if (toInput.val() && toInput.val() < minStr) toInput.val(minStr);
            }
            else {
                fromInput.removeAttr("min").removeAttr("max");
                toInput.removeAttr("min").removeAttr("max");
            }
        }

        setDateRules();

        $("#LeaveTypeId").on("change", setDateRules);
        $("#checkbox").on("change", setDateRules); 
    });
</script>
